WITH current_week AS (
    SELECT
        query AS Query,
        ROUND((total_slot_ms / TIMESTAMP_DIFF(end_time, start_time, MILLISECOND)), 2) AS Total_Slots,
        ROUND((TIMESTAMP_DIFF(end_time, start_time, MILLISECOND) / (1000 * 60 * 60)), 2) AS Query_Duration,
        ROUND((total_slot_ms / TIMESTAMP_DIFF(end_time, start_time, MILLISECOND) * .87 * (TIMESTAMP_DIFF(end_time, start_time, MILLISECOND) / (1000 * 60 * 60))), 2) AS Cost,
        start_time,
        end_time
    FROM
        `region-asia-east2.INFORMATION_SCHEMA.JOBS_BY_PROJECT` jobs
    WHERE
        user_email = '{user}'
        AND jobs.creation_time >= TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 7 DAY)
        AND job_type = 'QUERY'
),
previous_week AS (
    SELECT
        query AS Query,
        ROUND((total_slot_ms / TIMESTAMP_DIFF(end_time, start_time, MILLISECOND)), 2) AS Total_Slots,
        ROUND((TIMESTAMP_DIFF(end_time, start_time, MILLISECOND) / (1000 * 60 * 60)), 2) AS Query_Duration,
        ROUND((total_slot_ms / TIMESTAMP_DIFF(end_time, start_time, MILLISECOND) * .87 * (TIMESTAMP_DIFF(end_time, start_time, MILLISECOND) / (1000 * 60 * 60))), 2) AS Cost,
        start_time,
        end_time
    FROM
        `region-asia-east2.INFORMATION_SCHEMA.JOBS_BY_PROJECT` jobs
    WHERE
        user_email = '{user}'
        AND jobs.creation_time >= TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 14 DAY)
        AND jobs.creation_time < TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 7 DAY)
        AND job_type = 'QUERY'
),
weekly_data AS (
    SELECT
        current_week.Query,
        current_week.Total_Slots,
        current_week.Query_Duration,
        current_week.Cost AS Current_Cost,
        COALESCE(previous_week.Cost, 0) AS Previous_Cost,
        ROUND((current_week.Cost - COALESCE(previous_week.Cost, 0)), 2) AS Cost_Increment,
        ROUND((SUM(current_week.Total_Slots) OVER() / (1000 * 60 * 60)), 2) AS Billed_Hours
    FROM
        current_week
    LEFT JOIN
        previous_week
    ON
        current_week.Query = previous_week.Query
)
SELECT
    Query,
    Total_Slots,
    Query_Duration,
    Current_Cost AS Cost,
    Cost_Increment,
    Billed_Hours
FROM
    weekly_data
ORDER BY
    Cost DESC
LIMIT 2;
